{"version":3,"file":"static/js/990.e2837feb.chunk.js","mappings":"oOAqBA,EAnBoB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACrB,OACE,wBACGA,EAAQC,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACpB,OACE,0BACG,KACD,0BAAI,UAAQD,MACZ,uBAAIC,MAHGF,EAMZ,KAGN,E,2BCyBD,EArCgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAU,iBAAaF,EAAb,YAGhB,GAAwCG,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAA6BF,EAAAA,EAAAA,UAAS,MAAtC,eAAOG,EAAP,KAAiBC,EAAjB,KAiBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CACA,IAAMS,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,IAAqBR,GAFzB,OAETS,EAFS,OAIfN,EAAgBM,EAAKC,SAJN,gDAMfL,EAAS,KAAMM,SACfC,MAAM,SAAUR,GAPD,yDAAH,qDAUhBG,GAXoB,CAYrB,GAAE,CAACP,EAAYI,EAAUN,KAExB,yBACGI,EAAaW,OAAS,GACrB,0BACE,uBAAG,kBAGL,SAAC,EAAD,CAAarB,QAASU,KAI7B,C","sources":["components/ReviewsList/ReviewsList.jsx","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(el => {\n        const { id, author, content } = el;\n        return (\n          <li key={id}>\n            {' '}\n            <h3>Autor: {author}</h3>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nReviewsList.propTypes = {\n  reviews: PropTypes.array.isRequired,\n};\nexport default ReviewsList;\n","import ReviewsList from 'components/ReviewsList/ReviewsList';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { onFetchMoviesDetalis } from 'service/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const apiReviews = `/movie/${movieId}/reviews`;\n\n  // const apiDataMovie = `/movie/${movieId}`;\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  const [errorMes, setError] = useState(null);\n  // const [page, setPage] = 1;\n\n  useEffect(() => {\n    if (!movieId) return;\n    const dataMovies = async () => {\n      try {\n        const data = await onFetchMoviesDetalis(apiReviews);\n        // const { reviews } = data;\n        setMovieReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n        alert('ERROR:', errorMes);\n      }\n    };\n    dataMovies();\n  }, [apiReviews, errorMes, movieId]);\n  return (\n    <div>\n      {movieReviews.langth > 0 ? (\n        <div>\n          <p>Not Movies</p>\n        </div>\n      ) : (\n        <ReviewsList reviews={movieReviews} />\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["reviews","map","el","id","author","content","movieId","useParams","apiReviews","useState","movieReviews","setMovieReviews","errorMes","setError","useEffect","dataMovies","onFetchMoviesDetalis","data","results","message","alert","langth"],"sourceRoot":""}